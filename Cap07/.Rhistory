vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matriz1 <- matrix(1:20, nrow = 2)
matriz1
length(matriz1)
mode(matriz1)
class(matriz1)
typeof(matriz1)
array1 <- array(1:5, dim = c(3, 3, 3))
array1
length(array1)
mode(array1)
class(array1)
typeof(array1)
View(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
lista1 <- list(a = matriz1, b = vetor1)
lista1
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
func1 <- function(x) {
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
objects()
rm(array1, func1)
objects()
array1 <- array(1:5, dim = c(3, 3, 3))
func1 <- function(x) {
var1 <- x * x
return(var1)
}
q()
str <- c("Expressões", "regulares", "em linguagem R",
"permitem a busca de padrões", "e exploração de textos",
"podemos buscar padrões em dígitos",
"como por exemplo",
"10992451280")
length(str)
str
grep("ex", str, value = F)
grep("ex", str, value = T)
grep("\\d", str, value = F)
grep("\\d", str, value = T)
grepl("\\d+", str)
grepl("\\D", str)
gsub("em", "***", str)
gsub("ex", "EX", str, ignore.case = T)
sub("em", "EM", str)
frase <- "Isso é uma string."
regexpr(pattern = "u", frase)
gregexpr(pattern = "u", frase)
str2 <- c("2678 é maior que 45 - @???!§$",
"Vamos escrever 14 scripts R")
str2
gsub("\\d", "", str2)
gsub("\\D", "", str2)
gsub("\\s", "", str2)
gsub("[iot]", "Q", str2)
gsub("[[:punct:]]", "", str2)
q()
# Para saber qual diretório estou trabalhando
getwd()
# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
# Não use diretórios com espaço no nome
setwd("~/Cursos/DSA/FCD/BigDataRAzure/Cap07")
# Para saber qual diretório estou trabalhando
getwd()
# Lista de pacotes base carregados
search()
library(rvest)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
# Leitura da web page - Retorna um documento xml
webpage <- read_html("https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html")
webpage
results <- webpage %>% html_nodes(".short-desc")
results
# Construindo o dataset
records <- vector("list", length = length(results))
records
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
#lie <- str_sub(xml_contents(results[i])[2] %>%
#html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- tibble(data = date, explanation =  explanation, url = url)
}
records
# Dataset final
df <- bind_rows(records)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2021')
#lie <- str_sub(xml_contents(results[i])[2] %>%
#html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- tibble(data = date, explanation =  explanation, url = url)
}
df <- bind_rows(records)
df$date <- mdy(df$date)
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
#lie <- str_sub(xml_contents(results[i])[2] %>%
#html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- tibble(data = date, explanation =  explanation, url = url)
}
df <- bind_rows(records)
write_csv(df, "mentiras_trump.csv")
df <- read_csv("mentiras_trump.csv")
View(df)
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
#lie <- str_sub(xml_contents(results[i])[2] %>%
#html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data_frame(data = date, explanation =  explanation, url = url)
}
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
lie <- str_sub(xml_contents(results[i])[2] %>% html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data_frame(data = date, explanation =  explanation, url = url)
}
library(xml2)
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
lie <- str_sub(xml_contents(results[i])[2] %>% html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data_frame(data = date, explanation =  explanation, url = url)
}
records
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
lie <- str_sub(xml_contents(results[i])[2] %>% html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data_frame(data = date, lie = lie, explanation =  explanation, url = url)
}
records
# Dataset final
df <- bind_rows(records)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
# Exportando para CSV
write_csv(df, "mentiras_trump.csv")
# Lendo os dados
df <- read_csv("mentiras_trump.csv")
View(df)
library(lubridate)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
# Dataset final
df <- bind_rows(records)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
# Transformando o campo data para o formato Date em R
df_date <- mdy(df$date)
# Transformando o campo data para o formato Date em R
df$date <- mdy(df$date)
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = T), ' , 2017')
lie <- str_sub(xml_contents(results[i])[2] %>% html_text(trim = T), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = T), 2, -2)
url <- results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data_frame(date = date, lie = lie, explanation =  explanation, url = url)
}
df <- bind_rows(records)
df$date <- mdy(df$date)
write_csv(df, "mentiras_trump.csv")
df <- read_csv("mentiras_trump.csv")
View(df)
# Exportando para CSV
write_csv(df, "mentiras_trump_from_nytimes.csv")
# Lendo os dados
df <- read_csv("mentiras_trump_from_nytimes.csv")
View(df)
#Sair
q()
