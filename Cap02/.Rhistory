vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matriz1 <- matrix(1:20, nrow = 2)
matriz1
length(matriz1)
mode(matriz1)
class(matriz1)
typeof(matriz1)
array1 <- array(1:5, dim = c(3, 3, 3))
array1
length(array1)
mode(array1)
class(array1)
typeof(array1)
View(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
lista1 <- list(a = matriz1, b = vetor1)
lista1
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
func1 <- function(x) {
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
objects()
rm(array1, func1)
objects()
array1 <- array(1:5, dim = c(3, 3, 3))
func1 <- function(x) {
var1 <- x * x
return(var1)
}
q()
setwd("~/Cursos/DSA/FCD/BigDataRAzure/Cap02")
getwd()
lista_caracter1 = list('A', 'B', 'C')
lista_caracter1
lista_caracter2 = list(c("A", "A"), 'B', 'C')
lista_caracter2
lista_caracter3 = list(matrix(c("A", "A", "A", "A"), nrow = 2), 'B', 'C')
lista_caracter3
lista_inteiros = list(2,3,4)
lista_inteiros
lista_numerico = list(1.90, 45.3, 300.5)
lista_numerico
lista_complexo = list(5.2+3i, 3.8+4i)
lista_complexo
lista_logicos = list(TRUE, FALSE, TRUE, TRUE, FALSE)
lista_logicos
lista_composta = list("A", 3, TRUE)
lista_composta
lista1 <= list(1:10, c("Zico", "Ronaldo", "Garrincha"), rnorm(10))
lista1
lista1 <- list(1:10, c("Zico", "Ronaldo", "Garrincha"), rnorm(10))
lista1
?rnorm
lista1[1]
lista1[2]
lista1[[2]][1]
lista1[[2]][1] = "Mônica"
lista1
lista1[3]
names(lista1) <- c("inteiros", "caracteres", "numéricos")
lista1
vec_num <- 1:4
vec_char <- c("A", "B", "C", "D")
lista2 <- list(Numeros = vec_num, Letras = vec_char)
lista2
lista2 <- list(elemento1 = 3:5, elemento2 = c(7.2, 3.5))
lista2
names(lista1) <- c("inteiros", "caracteres", "numéricos")
lista1
lista1$caracteres
length(lista1$inteiros)
lista1$inteiros
length(lista1)
lista1$caracteres[2]
lista1$inteiros[7]
lista1$numéricos[10]
mode(lista1$numéricos)
mode(lista1$caracteres)
mode(lista1$inteiros)
lista3 <- c(lista1, lista2)
lista3
v = c(1:3)
v
l = as.list(v)
l
mat = matrix(1:4, nrow = 2)
mat
vec = c(1:9)
vec
lst = list(mat, vec)
lst
q()
