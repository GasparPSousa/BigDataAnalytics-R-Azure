vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matriz1 <- matrix(1:20, nrow = 2)
matriz1
length(matriz1)
mode(matriz1)
class(matriz1)
typeof(matriz1)
array1 <- array(1:5, dim = c(3, 3, 3))
array1
length(array1)
mode(array1)
class(array1)
typeof(array1)
View(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
lista1 <- list(a = matriz1, b = vetor1)
lista1
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
func1 <- function(x) {
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
objects()
rm(array1, func1)
objects()
array1 <- array(1:5, dim = c(3, 3, 3))
func1 <- function(x) {
var1 <- x * x
return(var1)
}
q()
str <- c("Expressões", "regulares", "em linguagem R",
"permitem a busca de padrões", "e exploração de textos",
"podemos buscar padrões em dígitos",
"como por exemplo",
"10992451280")
length(str)
str
grep("ex", str, value = F)
grep("ex", str, value = T)
grep("\\d", str, value = F)
grep("\\d", str, value = T)
grepl("\\d+", str)
grepl("\\D", str)
gsub("em", "***", str)
gsub("ex", "EX", str, ignore.case = T)
sub("em", "EM", str)
frase <- "Isso é uma string."
regexpr(pattern = "u", frase)
gregexpr(pattern = "u", frase)
str2 <- c("2678 é maior que 45 - @???!§$",
"Vamos escrever 14 scripts R")
str2
gsub("\\d", "", str2)
gsub("\\D", "", str2)
gsub("\\s", "", str2)
gsub("[iot]", "Q", str2)
gsub("[[:punct:]]", "", str2)
q()
setwd("~/Cursos/DSA/FCD/BigDataRAzure/Cap04")
getwd()
search()
demo("graphics")
x = 5:7
y = 8:10
plot(x, y)
?plot
altura <- c(145, 167, 176, 123, 150)
largura <- c(51, 63, 64, 40, 55)
plot(altura, largura)
?lynx
plot(lynx)
plot(lynx, ylab = "Plots com Dataframes", xlab = "")
plot(lynx, ylab = "Plots com Dataframes", xlab = "Observações")
plot(lynx, main = "Plots com Dataframes", col = 'red')
plot(lynx, main = "Plots com Dataframes", col = 'red', col.main = 52, cex.main = 52)
plot(lynx, main = "Plots com Dataframes", col = 'red', col.main = 52, cex.main = 1.5)
plot(lynx, main = "Plots com Dataframes", col = 'red', ylab = "Plots com Dataframes", xlab = "Observações", col.main = 52, cex.main = 1.5)
plot(lynx, main = "Plots com Dataframes", col = 'red', xlab = "Observações", col.main = 52, cex.main = 1.5)
library(datasets)
hist(warpbreaks$breaks)
hist(warpbreaks$breaks)
airquality
transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
par('pch')
par('lty')
x = 2:4
plot(x)
plot(x, pch = "*")
plot(x, pch = 2)
?pch
?pch
par(mfrow = c(2, 2), col.axis = "red")7
par(mfrow = c(2, 2), col.axis = "red")
plot(1:8, las = 0, xlab = "xlab", ylab = "ylab", main = "LAS = 0")
plot(1:8, las = 1, xlab = "xlab", ylab = "ylab", main = "LAS = 0")
plot(1:8, las = 2, xlab = "xlab", ylab = "ylab", main = "LAS = 0")
plot(1:8, las = 1, xlab = "xlab", ylab = "ylab", main = "LAS = 1")
plot(1:8, las = 2, xlab = "xlab", ylab = "ylab", main = "LAS = 2")
par(mfrow = c(2, 2), col.axis = "red")
plot(1:8, las = 0, xlab = "xlab", ylab = "ylab", main = "LAS = 0")
plot(1:8, las = 1, xlab = "xlab", ylab = "ylab", main = "LAS = 1")
plot(1:8, las = 2, xlab = "xlab", ylab = "ylab", main = "LAS = 2")
plot(1:8, las = 3, xlab = "xlab", ylab = "ylab", main = "LAS = 3")
legend("topright", pch = 1, col = c("blue", "red"), legend = c("Var1", "Var2"))
par(mfrow = c(1, 1))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("Var1", "Var2"))
colors()
png("Grafico1.png", width = 500, height = 500, res = 72)
plot(iris$Sepal.Length, iris$Petal.Length,
col = iris$Species,
main = "Gráfico .png gerado no R a partir do Iris")
dev.off()
pdf("Grafico2.png", width = 500, height = 500, res = 72)
pdf("Grafico2.pdf")
plot(iris$Sepal.Length, iris$Petal.Length,
col = iris$Species,
main = "Gráfico .pdf gerado no R a partir do Iris")
dev.off()
install.packages('plotrix')
library(plotrix)
?plotrix
par(mfrow = c(1,1), col.axis = "red")
plot(1:6, las = 3, xlab = "lty 1:6", ylab = "", main = "Mais opções ao plot")
ablineclip(v=1, lty=1, col="sienna2", lwd=2)
ablineclip(v=2, lty=1, col="sienna2", lwd=2)
ablineclip(v=3, lty=1, col="sienna2", lwd=2)
ablineclip(v=4, lty=1, col="sienna2", lwd=2)
ablineclip(v=5, lty=1, col="sienna2", lwd=2)
ablineclip(v=6, lty=1, col="sienna2", lwd=2)
ablineclip(v=7, lty=1, col="sienna2", lwd=2)
plot(lynx)
plot(lynx, type="p", main="Type p")
plot(lynx, type="l", main="Type l")
plot(lynx, type="b", main="Type b")
plot(lynx, type="o", main="Type o")
plot(lynx, type="h", main="Type h")
plot(lynx, type="s", main="Type s")
plot(lynx, type="n", main="Type n")
par(mar=c(4,3,3,3), col.axis="black")
plot(cars$speed, type="s", col="red", bty="n", xlab="Cars ID", ylab="")
par(new=T)
plot(cars$dist, type="s", bty="n", ann=F, axes=F, col="darkblue")
axis(side=4)
text(37, 18, "Distância", cex=0.85, col="darkblue")
title(main="Velocidade x Distância")
df <- read.csv('pibpercap.csv', stringsAsFactors = F)
df_1982 <- subset(df, ano == 1982)
plot(expectativa ~ pibpercap, data = df_1982, log = "x")
View(df)
df <- read.csv('~/Cursos/DSA/FCD/Scripts/Arquivos-Cap04/pibpercap.csv', stringsAsFactors = F)
df <- read.csv('~/Cursos/DSA/FCD/Scripts/Arquivos-Cap04/pibpercap.csv', stringsAsFactors = F)
df_1982 <- subset(df, ano == 1982)
plot(expectativa ~ pibpercap, data = df_1982, log = "x")
View(df)
mycol <- c(Asia = "tomato", Europe = "chocolate4", Africa = "dodgerblue2",
Americas = "darkgoldenrod1", Oceania = "green4")
plot(expectativa ~ pibpercap, data = df_1982, log = "x", col = mycol[continente])
mycex <- function(var, r, f = sqrt){
x = f(var)
x_scaled = (x - min(x))/(max(x) - min(x))
r[1] + x_scaled * (r[2] - r[1])
}
plot(expectativa ~ pibpercap, data = df_1982, log = "x",
col = mycol[continente],
cex = mycex(pop, r = c(0.2, 10))
)
q()
