vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matriz1 <- matrix(1:20, nrow = 2)
matriz1
length(matriz1)
mode(matriz1)
class(matriz1)
typeof(matriz1)
array1 <- array(1:5, dim = c(3, 3, 3))
array1
length(array1)
mode(array1)
class(array1)
typeof(array1)
View(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
lista1 <- list(a = matriz1, b = vetor1)
lista1
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
func1 <- function(x) {
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
objects()
rm(array1, func1)
objects()
array1 <- array(1:5, dim = c(3, 3, 3))
func1 <- function(x) {
var1 <- x * x
return(var1)
}
q()
str <- c("Expressões", "regulares", "em linguagem R",
"permitem a busca de padrões", "e exploração de textos",
"podemos buscar padrões em dígitos",
"como por exemplo",
"10992451280")
length(str)
str
grep("ex", str, value = F)
grep("ex", str, value = T)
grep("\\d", str, value = F)
grep("\\d", str, value = T)
grepl("\\d+", str)
grepl("\\D", str)
gsub("em", "***", str)
gsub("ex", "EX", str, ignore.case = T)
sub("em", "EM", str)
frase <- "Isso é uma string."
regexpr(pattern = "u", frase)
gregexpr(pattern = "u", frase)
str2 <- c("2678 é maior que 45 - @???!§$",
"Vamos escrever 14 scripts R")
str2
gsub("\\d", "", str2)
gsub("\\D", "", str2)
gsub("\\s", "", str2)
gsub("[iot]", "Q", str2)
gsub("[[:punct:]]", "", str2)
q()
# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
# Não use diretórios com espaço no nome
setwd("~/Cursos/DSA/FCD/BigDataRAzure/Cap06")
# Para saber qual diretório estou trabalhando
getwd()
# Lista de pacotes base carregados
search()
install.packages('RMySQL')
install.packages('RMySQL', dependencies=TRUE)
install.packages("dbplyr")
library(RMySQL)
library(ggplot2)
library(dbplyr)
# Conexão com o banco de dados
?dbConnect
con = dbConnect(MySQL(), user = "gaspar", password = "sousa", dbname = "titanicDB", host = "localhost")
con = dbConnect(MySQL(), user = "gaspar", password = "sousa2", dbname = "titanicDB", host = "localhost")
# Query SQL (para retornar um SUBSET de dados)
qry <- "SELECT pclass, survived, avg(age) AS media_idade FROM titanic WHERE survived = 1 GROUP BY pclass, survived;"
dbGetQuery(con, qry)
# Plot
dados <- dbGetQuery(con, qry)
head(dados)
class(dados)
ggplot(dados, aes(pclass, media_idade)) + geom_bar(stat = "identity")
# Conectando no MYSQL com dplyr
?src_mysql
library(dplyr)
# Conectando no MYSQL com dplyr
?src_mysql
con2 <- src_mysql(dbname = "titanicDB", user = 'gaspar', password = "sousa2", host = "localhost")
# Coletando e agrupando os dados
dados2 <- con2 %>%
tbl("titanic") %>%
select(pclass, sex, age, survived, fare) %>%
filter(survived == 0) %>%
collect()
head(dados2)
# Manipulando dados
dados2 <- con2 %>%
tbl("titanic") %>%
select(pclass, sex, survived) %>%
group_by(pclass, sex) %>%
summarise(survival_ratio = avg(survived)) %>%
collect()
View(dados)
View(dados2)
# Plot
ggplot(dados2, aes(pclass, survival_ratio, color = sex, group = sex)) +
geom_point(size = 3) +
geom_line()
dados2 <- con2 %>%
tbl("titanic") %>%
select(pclass, sex, age, fare) %>%
group_by(pclass, sex) %>%
summarise(avg_age = avg(age),avg_fare = avg(fare))
head(dados2)
dados2 <- con2 %>%
tbl("titanic") %>%
filter(fare > 150) %>%
select(pclass, sex, age, fare) %>%
group_by(pclass, sex) %>%
summarise(avg_age = avg(age),avg_fare = avg(fare))
head(dados2)
# Sair
q()
